{"/home/usuario/DSI-modifcacion/src/modificaciÃ³n.ts":{"path":"/home/usuario/DSI-modifcacion/src/modificaciÃ³n.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":117}},"2":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"3":{"start":{"line":7,"column":12},"end":{"line":7,"column":21}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":29}},"5":{"start":{"line":11,"column":25},"end":{"line":11,"column":52}},"6":{"start":{"line":12,"column":34},"end":{"line":12,"column":58}},"7":{"start":{"line":13,"column":36},"end":{"line":13,"column":62}},"8":{"start":{"line":14,"column":4},"end":{"line":17,"column":6}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":50}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":35}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":39}},"12":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"13":{"start":{"line":29,"column":12},"end":{"line":29,"column":29}},"14":{"start":{"line":31,"column":8},"end":{"line":31,"column":83}},"15":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"16":{"start":{"line":35,"column":12},"end":{"line":35,"column":29}},"17":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"18":{"start":{"line":38,"column":12},"end":{"line":38,"column":29}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":63}},"20":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"21":{"start":{"line":44,"column":12},"end":{"line":44,"column":29}},"22":{"start":{"line":46,"column":26},"end":{"line":46,"column":58}},"23":{"start":{"line":47,"column":24},"end":{"line":47,"column":90}},"24":{"start":{"line":48,"column":36},"end":{"line":48,"column":89}},"25":{"start":{"line":49,"column":38},"end":{"line":49,"column":93}},"26":{"start":{"line":50,"column":8},"end":{"line":50,"column":77}},"27":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"28":{"start":{"line":54,"column":12},"end":{"line":54,"column":29}},"29":{"start":{"line":56,"column":26},"end":{"line":56,"column":58}},"30":{"start":{"line":57,"column":24},"end":{"line":57,"column":87}},"31":{"start":{"line":58,"column":36},"end":{"line":58,"column":89}},"32":{"start":{"line":59,"column":38},"end":{"line":59,"column":93}},"33":{"start":{"line":60,"column":8},"end":{"line":60,"column":77}},"34":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"35":{"start":{"line":64,"column":12},"end":{"line":64,"column":29}},"36":{"start":{"line":66,"column":24},"end":{"line":66,"column":52}},"37":{"start":{"line":67,"column":26},"end":{"line":67,"column":58}},"38":{"start":{"line":68,"column":36},"end":{"line":68,"column":89}},"39":{"start":{"line":69,"column":38},"end":{"line":69,"column":93}},"40":{"start":{"line":70,"column":8},"end":{"line":70,"column":77}},"41":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"42":{"start":{"line":74,"column":12},"end":{"line":74,"column":29}},"43":{"start":{"line":76,"column":24},"end":{"line":76,"column":54}},"44":{"start":{"line":77,"column":26},"end":{"line":77,"column":56}},"45":{"start":{"line":78,"column":36},"end":{"line":78,"column":89}},"46":{"start":{"line":79,"column":38},"end":{"line":79,"column":93}},"47":{"start":{"line":80,"column":8},"end":{"line":80,"column":77}},"48":{"start":{"line":83,"column":0},"end":{"line":83,"column":30}},"49":{"start":{"line":88,"column":8},"end":{"line":88,"column":40}},"50":{"start":{"line":89,"column":8},"end":{"line":89,"column":37}},"51":{"start":{"line":90,"column":8},"end":{"line":90,"column":41}},"52":{"start":{"line":93,"column":8},"end":{"line":93,"column":31}},"53":{"start":{"line":96,"column":8},"end":{"line":96,"column":33}},"54":{"start":{"line":99,"column":0},"end":{"line":99,"column":38}},"55":{"start":{"line":104,"column":8},"end":{"line":104,"column":19}},"56":{"start":{"line":105,"column":8},"end":{"line":105,"column":19}},"57":{"start":{"line":108,"column":16},"end":{"line":108,"column":28}},"58":{"start":{"line":109,"column":16},"end":{"line":109,"column":28}},"59":{"start":{"line":110,"column":8},"end":{"line":110,"column":33}},"60":{"start":{"line":113,"column":16},"end":{"line":113,"column":28}},"61":{"start":{"line":114,"column":16},"end":{"line":114,"column":28}},"62":{"start":{"line":115,"column":8},"end":{"line":115,"column":33}},"63":{"start":{"line":118,"column":16},"end":{"line":118,"column":28}},"64":{"start":{"line":119,"column":16},"end":{"line":119,"column":28}},"65":{"start":{"line":120,"column":8},"end":{"line":120,"column":33}},"66":{"start":{"line":123,"column":16},"end":{"line":123,"column":28}},"67":{"start":{"line":124,"column":16},"end":{"line":124,"column":28}},"68":{"start":{"line":125,"column":8},"end":{"line":125,"column":33}},"69":{"start":{"line":128,"column":0},"end":{"line":128,"column":26}},"70":{"start":{"line":134,"column":8},"end":{"line":134,"column":20}},"71":{"start":{"line":135,"column":8},"end":{"line":135,"column":33}},"72":{"start":{"line":139,"column":16},"end":{"line":139,"column":95}},"73":{"start":{"line":140,"column":8},"end":{"line":140,"column":31}},"74":{"start":{"line":144,"column":16},"end":{"line":144,"column":95}},"75":{"start":{"line":145,"column":8},"end":{"line":145,"column":37}},"76":{"start":{"line":149,"column":25},"end":{"line":149,"column":88}},"77":{"start":{"line":150,"column":16},"end":{"line":150,"column":47}},"78":{"start":{"line":151,"column":8},"end":{"line":151,"column":36}},"79":{"start":{"line":155,"column":25},"end":{"line":155,"column":88}},"80":{"start":{"line":156,"column":16},"end":{"line":156,"column":47}},"81":{"start":{"line":157,"column":8},"end":{"line":157,"column":34}},"82":{"start":{"line":160,"column":0},"end":{"line":160,"column":26}}},"fnMap":{"0":{"name":"simplificarFraccion","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":28}},"loc":{"start":{"line":4,"column":53},"end":{"line":18,"column":1}},"line":4},"1":{"name":"mcd","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":16}},"loc":{"start":{"line":5,"column":23},"end":{"line":10,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":40},"end":{"line":26,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":10},"end":{"line":32,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":10},"end":{"line":41,"column":5}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":11},"end":{"line":51,"column":5}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":17},"end":{"line":61,"column":5}},"line":52},"7":{"name":"(anonymous_7)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":16},"end":{"line":71,"column":5}},"line":62},"8":{"name":"(anonymous_8)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":14},"end":{"line":81,"column":5}},"line":72},"9":{"name":"(anonymous_9)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":42},"end":{"line":91,"column":5}},"line":87},"10":{"name":"(anonymous_10)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":20},"end":{"line":94,"column":5}},"line":92},"11":{"name":"(anonymous_11)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":22},"end":{"line":97,"column":5}},"line":95},"12":{"name":"(anonymous_12)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":22},"end":{"line":106,"column":5}},"line":103},"13":{"name":"(anonymous_13)","decl":{"start":{"line":107,"column":4},"end":{"line":107,"column":5}},"loc":{"start":{"line":107,"column":11},"end":{"line":111,"column":5}},"line":107},"14":{"name":"(anonymous_14)","decl":{"start":{"line":112,"column":4},"end":{"line":112,"column":5}},"loc":{"start":{"line":112,"column":17},"end":{"line":116,"column":5}},"line":112},"15":{"name":"(anonymous_15)","decl":{"start":{"line":117,"column":4},"end":{"line":117,"column":5}},"loc":{"start":{"line":117,"column":16},"end":{"line":121,"column":5}},"line":117},"16":{"name":"(anonymous_16)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":14},"end":{"line":126,"column":5}},"line":122},"17":{"name":"(anonymous_17)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":26},"end":{"line":136,"column":5}},"line":133},"18":{"name":"(anonymous_18)","decl":{"start":{"line":138,"column":4},"end":{"line":138,"column":5}},"loc":{"start":{"line":138,"column":18},"end":{"line":141,"column":5}},"line":138},"19":{"name":"(anonymous_19)","decl":{"start":{"line":143,"column":4},"end":{"line":143,"column":5}},"loc":{"start":{"line":143,"column":24},"end":{"line":146,"column":5}},"line":143},"20":{"name":"(anonymous_20)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":23},"end":{"line":152,"column":5}},"line":148},"21":{"name":"(anonymous_21)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":21},"end":{"line":158,"column":5}},"line":154}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"type":"if","locations":[{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},{"start":{"line":6,"column":8},"end":{"line":8,"column":9}}],"line":6},"1":{"loc":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},{"start":{"line":28,"column":8},"end":{"line":30,"column":9}}],"line":28},"2":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"3":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{"line":37,"column":8},"end":{"line":39,"column":9}}],"line":37},"4":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"5":{"loc":{"start":{"line":43,"column":12},"end":{"line":43,"column":60}},"type":"binary-expr","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":34}},{"start":{"line":43,"column":38},"end":{"line":43,"column":60}}],"line":43},"6":{"loc":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},{"start":{"line":53,"column":8},"end":{"line":55,"column":9}}],"line":53},"7":{"loc":{"start":{"line":53,"column":12},"end":{"line":53,"column":57}},"type":"binary-expr","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":34}},{"start":{"line":53,"column":38},"end":{"line":53,"column":57}}],"line":53},"8":{"loc":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},{"start":{"line":63,"column":8},"end":{"line":65,"column":9}}],"line":63},"9":{"loc":{"start":{"line":63,"column":12},"end":{"line":63,"column":57}},"type":"binary-expr","locations":[{"start":{"line":63,"column":12},"end":{"line":63,"column":34}},{"start":{"line":63,"column":38},"end":{"line":63,"column":57}}],"line":63},"10":{"loc":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},{"start":{"line":73,"column":8},"end":{"line":75,"column":9}}],"line":73},"11":{"loc":{"start":{"line":73,"column":12},"end":{"line":73,"column":57}},"type":"binary-expr","locations":[{"start":{"line":73,"column":12},"end":{"line":73,"column":34}},{"start":{"line":73,"column":38},"end":{"line":73,"column":57}}],"line":73}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":4,"11":4,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":4,"50":4,"51":4,"52":4,"53":4,"54":1,"55":20,"56":20,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":4,"71":4,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1},"f":{"0":0,"1":0,"2":4,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":4,"10":4,"11":4,"12":20,"13":1,"14":1,"15":1,"16":1,"17":4,"18":1,"19":1,"20":1,"21":1},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI-modifcacion/src/modificaciÃ³n.ts","sources":["/home/usuario/DSI-modifcacion/src/modificaciÃ³n.ts"],"names":[],"mappings":";;;AAOA,SAAgB,mBAAmB,CAAC,SAAgB,EAAE,WAAkB;IACpE,SAAS,GAAG,CAAC,CAAQ,EAAE,CAAQ;QAC3B,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YACV,OAAO,CAAC,CAAC;QACb,CAAC;QACD,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACzB,CAAC;IACD,MAAM,YAAY,GAAG,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IAEjD,MAAM,qBAAqB,GAAG,SAAS,GAAG,YAAY,CAAC;IACvD,MAAM,uBAAuB,GAAG,WAAW,GAAG,YAAY,CAAC;IAC3D,OAAO;QACH,SAAS,EAAE,qBAAqB;QAChC,WAAW,EAAE,uBAAuB;KACvC,CAAC;AACN,CAAC;AAfD,kDAeC;AAID,MAAa,SAAS;IAEE;IAAyB;IAA7C,YAAoB,SAAgB,EAAS,WAAkB;QAA3C,cAAS,GAAT,SAAS,CAAO;QAAS,gBAAW,GAAX,WAAW,CAAO;IAE/D,CAAC;IAED,GAAG;QACH,IAAG,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE,CAAC;YACxB,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,OAAO,IAAI,SAAS,CAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,GAAG;QACH,IAAG,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE,CAAC;YACxB,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,IAAG,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE,CAAC;YACtB,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,OAAO,IAAI,SAAS,CAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5D,CAAC;IAEG,GAAG,CAAC,CAAW;QACf,IAAG,IAAI,CAAC,WAAW,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE,CAAC;YAClD,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;QACnD,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,SAAS,GAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QAClF,IAAI,qBAAqB,GAAG,mBAAmB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC;QAClF,IAAI,uBAAuB,GAAG,mBAAmB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,WAAW,CAAC;QACtF,OAAO,IAAI,SAAS,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,CAAC;IACzE,CAAC;IAGG,SAAS,CAAC,CAAW;QACrB,IAAG,IAAI,CAAC,WAAW,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,EAAE,CAAC;YAC/C,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;QACnD,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QAChF,IAAI,qBAAqB,GAAG,mBAAmB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC;QAClF,IAAI,uBAAuB,GAAG,mBAAmB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,WAAW,CAAC;QACtF,OAAO,IAAI,SAAS,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,CAAC;IACzE,CAAC;IAEG,QAAQ,CAAC,CAAW;QACpB,IAAG,IAAI,CAAC,WAAW,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,EAAE,CAAC;YAC/C,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;QAC7C,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;QACnD,IAAI,qBAAqB,GAAG,mBAAmB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC;QAClF,IAAI,uBAAuB,GAAG,mBAAmB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,WAAW,CAAC;QACtF,OAAO,IAAI,SAAS,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,CAAC;IACzE,CAAC;IAEG,MAAM,CAAC,CAAW;QAClB,IAAG,IAAI,CAAC,WAAW,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,EAAE,CAAC;YAC/C,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,WAAW,CAAC;QAC/C,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,SAAS,CAAC;QACjD,IAAI,qBAAqB,GAAG,mBAAmB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC;QAClF,IAAI,uBAAuB,GAAG,mBAAmB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,WAAW,CAAC;QACtF,OAAO,IAAI,SAAS,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,CAAC;IACzE,CAAC;CACA;AAnED,8BAmEC;AAED,MAAa,aAAc,SAAQ,SAAS;IAEpB;IAA0B;IAA9C,YAAoB,UAAiB,EAAS,YAAmB;QAC7D,KAAK,CAAC,UAAU,EAAC,YAAY,CAAC,CAAA;QADd,eAAU,GAAV,UAAU,CAAO;QAAS,iBAAY,GAAZ,YAAY,CAAO;IAEjE,CAAC;IACD,aAAa;QAET,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IACD,eAAe;QAEX,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;CACJ;AAbD,sCAaC;AAKD,MAAa,OAAO;IAEG;IAAiB;IAArC,YAAoB,CAAQ,EAAS,CAAQ;QAAzB,MAAC,GAAD,CAAC,CAAO;QAAS,MAAC,GAAD,CAAC,CAAO;IAC7C,CAAC;IACD,GAAG,CAAC,CAAS;QAEV,IAAI,CAAC,GAAS,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,GAAS,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QACzB,OAAO,IAAI,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IACD,SAAS,CAAC,CAAS;QAClB,IAAI,CAAC,GAAS,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,GAAS,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QACzB,OAAO,IAAI,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IACD,QAAQ,CAAC,CAAS;QACjB,IAAI,CAAC,GAAS,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,GAAS,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QACzB,OAAO,IAAI,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IACD,MAAM,CAAC,CAAS;QACb,IAAI,CAAC,GAAS,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,GAAS,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QACzB,OAAO,IAAI,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;CACH;AAzBD,0BAyBC;AAGD,0CAA0C;AAC1C,MAAa,OAAQ,SAAQ,OAAO;IAEX;IADrB,wCAAwC;IACvC,YAAoB,QAAsB;QACtC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;QADM,aAAQ,GAAR,QAAQ,CAAc;IAE1C,CAAC;IACD,aAAa;IACN,GAAG,CAAC,QAAgB;QAExB,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC,EAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAA;QACpF,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IACD,aAAa;IACN,SAAS,CAAC,QAAgB;QAE9B,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC,EAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAA;QACpF,OAAO,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IACD,aAAa;IACN,QAAQ,CAAC,QAAgB;QAE7B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAA;QAC9E,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAC,QAAQ,CAAC,CAAA;QACtC,OAAO,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IACD,aAAa;IACN,MAAM,CAAC,QAAgB;QAE3B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAA;QAC9E,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAC,QAAQ,CAAC,CAAA;QACtC,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;CAEL;AAhCD,0BAgCC","sourcesContent":["export interface Arithmeticable<T>{\n    add(n:T):T | undefined;\n    substract(n:T):T | undefined;\n    multiply(n:T):T | undefined;\n    divide(n:T):T | undefined;\n}\n\nexport function simplificarFraccion(numerador:number, denominador:number):{numerador:number, denominador:number} {\n    function mcd(a:number, b:number):number {\n        if (b === 0) {\n            return a;\n        }\n        return mcd(b, a % b);\n    }\n    const divisorComun = mcd(numerador, denominador);\n\n    const numeradorSimplificado = numerador / divisorComun;\n    const denominadorSimplificado = denominador / divisorComun;\n    return {\n        numerador: numeradorSimplificado,\n        denominador: denominadorSimplificado,\n    }; \n}\n\n\n\nexport class Racionals implements Arithmeticable<Racionals>{\n   \n    constructor(private numerador:number,private denominador:number){\n\n    }\n\n    abs(): Racionals | undefined {\n    if(this.denominador === 0) {\n        return undefined;\n    }\n    return new Racionals (Math.abs(this.numerador), Math.abs(this.denominador));\n    }\n\n    inv(): Racionals| undefined {\n    if(this.denominador === 0) {\n        return undefined;\n    }\n    if(this.numerador === 0) {\n        return undefined;\n    }\n    return new Racionals (this.denominador, this.numerador);\n}\n\n    add(n:Racionals): Racionals |undefined {\n    if(this.denominador === 0 || this.denominador === 0) {\n        return undefined;\n    }\n    let denominador = this.denominador * n.denominador;\n    let numerador = this.denominador * n.numerador+ this.numerador * this.denominador;\n    let numeradorSimplificado = simplificarFraccion(numerador, denominador).numerador;\n    let denominadorSimplificado = simplificarFraccion(numerador, denominador).denominador;\n    return new Racionals(numeradorSimplificado, denominadorSimplificado);\n}\n\n  \n    substract(n:Racionals): Racionals|undefined {\n    if(this.denominador === 0 || n.denominador === 0) {\n        return undefined;\n    }\n    let denominador = this.denominador * n.denominador;\n    let numerador = this.numerador * n.denominador - n.numerador * this.denominador;\n    let numeradorSimplificado = simplificarFraccion(numerador, denominador).numerador;\n    let denominadorSimplificado = simplificarFraccion(numerador, denominador).denominador;\n    return new Racionals(numeradorSimplificado, denominadorSimplificado);\n}\n\n    multiply(n:Racionals): Racionals |undefined {\n    if(this.denominador === 0 || n.denominador === 0) {\n        return undefined;\n    }\n    let numerador = this.numerador * n.numerador;\n    let denominador = this.denominador * n.denominador;\n    let numeradorSimplificado = simplificarFraccion(numerador, denominador).numerador;\n    let denominadorSimplificado = simplificarFraccion(numerador, denominador).denominador;\n    return new Racionals(numeradorSimplificado, denominadorSimplificado);\n}\n\n    divide(n:Racionals): Racionals |undefined {\n    if(this.denominador === 0 || n.denominador === 0) {\n        return undefined;\n    }\n    let numerador = this.numerador * n.denominador;\n    let denominador = this.denominador * n.numerador;\n    let numeradorSimplificado = simplificarFraccion(numerador, denominador).numerador;\n    let denominadorSimplificado = simplificarFraccion(numerador, denominador).denominador;\n    return new Racionals(numeradorSimplificado, denominadorSimplificado);\n}    \n}\n\nexport class Racionals_get extends Racionals\n{\n    constructor(private numerador_:number,private denominador_:number){\n        super(numerador_,denominador_)\n    }\n    get_numerador():number\n    {\n        return this.numerador_;\n    }\n    get_denominador():number\n    {\n        return this.denominador_;\n    }\n}\n\n\n\n\nexport class Complex implements Arithmeticable<Complex>\n{\n   constructor(private i:number,private r:number){\n   }\n   add(n:Complex):Complex| undefined\n   {\n      let i:number= this.i+n.i;\n      let r:number= this.r+n.r;\n      return new Complex(i,r);\n   }\n   substract(n:Complex): Complex | undefined {\n    let i:number= this.i-n.i;\n    let r:number= this.r-n.r;\n    return new Complex(i,r);      \n   }\n   multiply(n:Complex): Complex| undefined {\n    let i:number= this.i*n.i;\n    let r:number= this.r*n.r;\n    return new Complex(i,r);\n   }\n   divide(n:Complex): Complex| undefined {\n      let i:number= this.i/n.i;\n      let r:number= this.r/n.r;\n      return new Complex(i,r);   \n   }\n}\n\n\n/**@class Adaptador de racional complejo*/\nexport class Adapter extends Complex{\n    /**@constructor cosntruye un racional */\n     constructor(private racional:Racionals_get){\n         super(0,0)\n     }\n     /**@public */\n     public add(Complejo:Complex):Complex |undefined\n     {\n        let r = new Complex(0,this.racional.get_numerador()/this.racional.get_denominador())\n        return Complejo.add(r);\n     }\n     /**@public */\n     public substract(Complejo:Complex):Complex |undefined\n     {\n        let r = new Complex(0,this.racional.get_numerador()/this.racional.get_denominador())\n        return Complejo.substract(r);\n     }\n     /**@public */\n     public multiply(Complejo:Complex):Complex |undefined\n     {\n        const racional = this.racional.get_numerador()/this.racional.get_denominador()\n        let r = new Complex(racional,racional)\n        return Complejo.multiply(r);\n     }     \n     /**@public */\n     public divide(Complejo:Complex):Complex |undefined\n     {\n        const racional = this.racional.get_numerador()/this.racional.get_denominador()\n        let r = new Complex(racional,racional)\n        return Complejo.divide(r);\n     } \n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b775cfe00b4e447d63de77de68648b3618d7d85a","contentHash":"ff6753c44f72f10edd5a75c5d180a3ae5b3fa0ac897b6b2a246f5d6f14f53b09"}}